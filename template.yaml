AWSTemplateFormatVersion: 2010-09-09
Description: RDFOX Fargate Deployment

Parameters:

  CPU:
    Type: Number
    Default: 1024

  Memory:
    Type: Number
    Default: 8192

  VPC:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: Select a minimum of 3 subnets
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  # Fargate
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: rdfox-cluster

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      DesiredCount: 1
      #HealthCheckGracePeriodSeconds: 300
      LaunchType: FARGATE
      #LoadBalancers:
      #  - ContainerName: rdfox
      #    ContainerPort: 80
      #    TargetGroupArn: !Ref  TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ECSSecurityGroup
          Subnets: !Ref Subnets
      TaskDefinition: !Ref TaskDefinition

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: oxfordsemantic/rdfox
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: rdfox
          MountPoints:
            - SourceVolume: rdfox
              ContainerPath: /home/rdfox/.RDFox
          Name: rdfox
          PortMappings:
            - ContainerPort: 12110
          Secrets:
            - Name: RDFOX_ROLE
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/rdfox/role
            - Name: RDFOX_PASSWORD
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/rdfox/role-password
            - Name: RDFOX_LICENSE_CONTENT
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/rdfox/license
      Cpu: !Ref CPU
      Memory: !Ref Memory
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: rdfox
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      TaskRoleArn: !Ref TaskRole
      Volumes:
        - EFSVolumeConfiguration:
            AuthorizationConfig:
              IAM: ENABLED
              AccessPointId: !GetAtt EFSAccessPoint.AccessPointId
            FilesystemId: !Ref EFS
            RootDirectory: /
            TransitEncryption: ENABLED
          Name: rdfox

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: rdfox
      RetentionInDays: 365

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: rdfox-task-execution-role
      AssumeRolePolicyDocument:
        Statement:
          Action: [ sts:AssumeRole ]
          Effect: Allow
          Principal:
            Service: [ ecs-tasks.amazonaws.com ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: rdfox-task-execution-policy
          PolicyDocument:
            Statement:
              - Action: [ ssm:GetParameters, ssm:GetParameter,
                          secretsmanager:GetSecretValue, secretsmanager:DescribeSecret,
                          kms:Decrypt ]
                Effect: Allow
                Resource: "*"

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: rdfox-task-role
      AssumeRolePolicyDocument:
        Statement:
          Action: [ sts:AssumeRole ]
          Effect: Allow
          Principal:
            Service: [ ecs-tasks.amazonaws.com ]
      Policies:
        - PolicyName: rdfox-task-execution-policy
          PolicyDocument:
            Statement:
              - Action: [ elasticfilesystem:* ]
                Effect: Allow
                Resource: "*"

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 12110
          ToPort: 12110
          CidrIp: 0.0.0.0/0

  # EFS
  EFS:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      FileSystemPolicy:
        Statement:
          - Action: [ "elasticfilesystem:ClientMount" ]
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
      FileSystemTags:
        - Key: Name
          Value: rdfox
      LifecyclePolicies:
        - TransitionToIA: AFTER_60_DAYS
      PerformanceMode: generalPurpose
      ProvisionedThroughputInMibps: 10
      ThroughputMode: provisioned


  EFSAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref EFS
      RootDirectory:
        CreationInfo:
          OwnerGid: "1211"
          OwnerUid: "1211"
          Permissions: "750"
        Path: /rdfox

  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref ECSSecurityGroup
          IpProtocol: -1

  EFSMT1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SecurityGroups: [ !Ref EFSSecurityGroup ]
      SubnetId: !Select [ 0, !Ref Subnets ]

  EFSMT2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SecurityGroups: [ !Ref EFSSecurityGroup ]
      SubnetId: !Select [ 1, !Ref Subnets ]

  EFSMT3:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SecurityGroups: [ !Ref EFSSecurityGroup ]
      SubnetId: !Select [ 2, !Ref Subnets ]

